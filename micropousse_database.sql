-- MySQL Script generated by MySQL Workbench
-- jeu. 19 déc. 2019 09:53:01 CET
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema micropousse_database
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema micropousse_database
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `micropousse_database` ;
USE `micropousse_database` ;

-- -----------------------------------------------------
-- Table `micropousse_database`.`Livraison clients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `micropousse_database`.`Livraison clients` (
  `ID_Livraison clients` INT NOT NULL,
  `Référence_livraison` VARCHAR(45) NULL,
  `Date_début_livraison_clients` VARCHAR(45) NULL,
  `Date_fin_livraison_clients` VARCHAR(45) NULL,
  PRIMARY KEY (`ID_Livraison clients`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `micropousse_database`.`Commande client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `micropousse_database`.`Commande client` (
  `ID_Commande clients` INT NOT NULL,
  `Nombre_commande_clients` VARCHAR(45) NULL,
  `Prix_commandes_clients_total` VARCHAR(45) NULL,
  `Prix_commande_unitaire_client` VARCHAR(45) NULL,
  `Livraison clients_ID_Livraison clients` INT NOT NULL,
  PRIMARY KEY (`ID_Commande clients`),
  INDEX `fk_Commande client_Livraison clients1_idx` (`Livraison clients_ID_Livraison clients` ASC) VISIBLE,
  CONSTRAINT `fk_Commande client_Livraison clients1`
    FOREIGN KEY (`Livraison clients_ID_Livraison clients`)
    REFERENCES `micropousse_database`.`Livraison clients` (`ID_Livraison clients`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `micropousse_database`.`Clients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `micropousse_database`.`Clients` (
  `ID_Clients` INT NOT NULL,
  `Numéro_clients` VARCHAR(45) NULL,
  `Adresse_clients` VARCHAR(45) NULL,
  `Tel_clients` VARCHAR(45) NULL,
  `Commande client_ID_Commande clients` INT NOT NULL,
  PRIMARY KEY (`ID_Clients`),
  INDEX `fk_Clients_Commande client1_idx` (`Commande client_ID_Commande clients` ASC) VISIBLE,
  CONSTRAINT `fk_Clients_Commande client1`
    FOREIGN KEY (`Commande client_ID_Commande clients`)
    REFERENCES `micropousse_database`.`Commande client` (`ID_Commande clients`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `micropousse_database`.`Commande fournisseur`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `micropousse_database`.`Commande fournisseur` (
  `ID_Commande fournisseur` INT NOT NULL,
  `Nombre_commande` VARCHAR(45) NULL,
  `Prix_des_commandes_total` VARCHAR(45) NULL,
  `Prix_commande_unitaire` VARCHAR(45) NULL,
  PRIMARY KEY (`ID_Commande fournisseur`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `micropousse_database`.`Production`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `micropousse_database`.`Production` (
  `ID_Production` INT NOT NULL,
  `Nombres_production_total` VARCHAR(45) NULL,
  `Nombre_serres` VARCHAR(45) NULL,
  `Nombre_graines` VARCHAR(45) NULL,
  `Clients_ID_Clients` INT NOT NULL,
  PRIMARY KEY (`ID_Production`),
  INDEX `fk_Production_Clients1_idx` (`Clients_ID_Clients` ASC) VISIBLE,
  CONSTRAINT `fk_Production_Clients1`
    FOREIGN KEY (`Clients_ID_Clients`)
    REFERENCES `micropousse_database`.`Clients` (`ID_Clients`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `micropousse_database`.`Graine`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `micropousse_database`.`Graine` (
  `ID_Graine` INT NOT NULL,
  `Nombre_de_graines_total` VARCHAR(45) NULL,
  `Production_ID_Production` INT NOT NULL,
  PRIMARY KEY (`ID_Graine`),
  INDEX `fk_Graine_Production1_idx` (`Production_ID_Production` ASC) VISIBLE,
  CONSTRAINT `fk_Graine_Production1`
    FOREIGN KEY (`Production_ID_Production`)
    REFERENCES `micropousse_database`.`Production` (`ID_Production`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `micropousse_database`.`Serres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `micropousse_database`.`Serres` (
  `ID_Serres` INT NOT NULL,
  `Nombre_de_serres_total` VARCHAR(45) NULL,
  `Production_ID_Production` INT NOT NULL,
  PRIMARY KEY (`ID_Serres`),
  INDEX `fk_Serres_Production1_idx` (`Production_ID_Production` ASC) VISIBLE,
  CONSTRAINT `fk_Serres_Production1`
    FOREIGN KEY (`Production_ID_Production`)
    REFERENCES `micropousse_database`.`Production` (`ID_Production`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `micropousse_database`.`Livraison fournisseurs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `micropousse_database`.`Livraison fournisseurs` (
  `ID_livraison` INT NOT NULL,
  `Référence_livraison` VARCHAR(45) NULL,
  `Date_début_livraison` VARCHAR(45) NULL,
  `Date_fin_livraison` VARCHAR(45) NULL,
  `Graine_ID_Graine` INT NOT NULL,
  `Serres_ID_Serres` INT NOT NULL,
  PRIMARY KEY (`ID_livraison`, `Graine_ID_Graine`, `Serres_ID_Serres`),
  INDEX `fk_Livraison fournisseurs_Graine1_idx` (`Graine_ID_Graine` ASC) VISIBLE,
  INDEX `fk_Livraison fournisseurs_Serres1_idx` (`Serres_ID_Serres` ASC) VISIBLE,
  CONSTRAINT `fk_Livraison fournisseurs_Graine1`
    FOREIGN KEY (`Graine_ID_Graine`)
    REFERENCES `micropousse_database`.`Graine` (`ID_Graine`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Livraison fournisseurs_Serres1`
    FOREIGN KEY (`Serres_ID_Serres`)
    REFERENCES `micropousse_database`.`Serres` (`ID_Serres`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `micropousse_database`.`Fournisseur`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `micropousse_database`.`Fournisseur` (
  `ID_fournisseur` INT NOT NULL,
  `Nombre_fournisseurs` VARCHAR(45) NULL,
  `Adresse_fournisseurs` VARCHAR(45) NULL,
  `Commande fournisseur_ID_Commande fournisseur` INT NOT NULL,
  `Livraison fournisseurs_ID_livraison` INT NOT NULL,
  PRIMARY KEY (`ID_fournisseur`, `Livraison fournisseurs_ID_livraison`),
  INDEX `fk_Fournisseur_Commande fournisseur_idx` (`Commande fournisseur_ID_Commande fournisseur` ASC) VISIBLE,
  INDEX `fk_Fournisseur_Livraison fournisseurs1_idx` (`Livraison fournisseurs_ID_livraison` ASC) VISIBLE,
  CONSTRAINT `fk_Fournisseur_Commande fournisseur`
    FOREIGN KEY (`Commande fournisseur_ID_Commande fournisseur`)
    REFERENCES `micropousse_database`.`Commande fournisseur` (`ID_Commande fournisseur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Fournisseur_Livraison fournisseurs1`
    FOREIGN KEY (`Livraison fournisseurs_ID_livraison`)
    REFERENCES `micropousse_database`.`Livraison fournisseurs` (`ID_livraison`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `micropousse_database`.`table1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `micropousse_database`.`table1` (
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `micropousse_database`.`fournisseur Commande`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `micropousse_database`.`fournisseur Commande` (
)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
